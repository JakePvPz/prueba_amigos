/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto_final_nomina;

import java.awt.Color;
import java.io.*;
import java.time.LocalDate;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author raynickrosario
 */
public class Mantenimiento_empleados extends javax.swing.JFrame {

    /**
     * Creates new form Mantenimiento_empleados
     */
    public Mantenimiento_empleados() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        btn_grupo_sexo.add(rad_btn_masculino);
        btn_grupo_sexo.add(rad_btn_femenino);
        
        btn_grupo_coop.add(rad_btn_si);
        btn_grupo_coop.add(rad_btn_no);
        
        txt_fecha.setText(String.valueOf(LocalDate.now()));
    }
    
    boolean id_existe = false;
    boolean id_departamento_existe = false;
    boolean id_puesto_existe = false;
    String linea_antigua;
    String linea_antigua_coop;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_grupo_sexo = new javax.swing.ButtonGroup();
        btn_grupo_coop = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        lbl_id = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        lbl_nombre = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        lbl_apellido_pat = new javax.swing.JLabel();
        lbl_apellido_mat = new javax.swing.JLabel();
        txt_apellido_pat = new javax.swing.JTextField();
        txt_apellido_mat = new javax.swing.JTextField();
        lbl_direccion = new javax.swing.JLabel();
        txt_direccion = new javax.swing.JTextField();
        lbl_telefono = new javax.swing.JLabel();
        txt_telefono = new javax.swing.JTextField();
        lbl_sexo = new javax.swing.JLabel();
        rad_btn_masculino = new javax.swing.JRadioButton();
        rad_btn_femenino = new javax.swing.JRadioButton();
        lbl_fecha = new javax.swing.JLabel();
        txt_fecha = new javax.swing.JTextField();
        lbl_id_departamento = new javax.swing.JLabel();
        txt_id_departamento = new javax.swing.JTextField();
        lbl_id_puesto = new javax.swing.JLabel();
        txt_id_puesto = new javax.swing.JTextField();
        lbl_coop = new javax.swing.JLabel();
        rad_btn_si = new javax.swing.JRadioButton();
        rad_btn_no = new javax.swing.JRadioButton();
        lbl_salario = new javax.swing.JLabel();
        txt_salario = new javax.swing.JTextField();
        btn_guardar = new javax.swing.JButton();
        lbl_descuento = new javax.swing.JLabel();
        txt_descuento = new javax.swing.JTextField();
        lbl_balance_acumulado = new javax.swing.JLabel();
        txt_balance_acumulado = new javax.swing.JTextField();
        menu = new javax.swing.JMenuBar();
        menu_principal = new javax.swing.JMenu();
        menu_Mantenimientos = new javax.swing.JMenu();
        mantenimiento_de_usuarios = new javax.swing.JMenu();
        mantenimiento_de_departamentos = new javax.swing.JMenu();
        mantenimiento_de_puestos = new javax.swing.JMenu();
        mantenimiento_de_empleados = new javax.swing.JMenu();
        menu_procesos = new javax.swing.JMenu();
        proceso_generar_nomina = new javax.swing.JMenu();
        proceso_reversar_nomina = new javax.swing.JMenu();
        menu_consultas = new javax.swing.JMenu();
        consulta_de_departamento = new javax.swing.JMenu();
        consulta_de_puestos = new javax.swing.JMenu();
        consulta_empleado = new javax.swing.JMenu();
        consulta_nomina = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel1.setText("Mantenimiento de Empleados");

        lbl_id.setText("ID:");

        txt_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idActionPerformed(evt);
            }
        });

        lbl_nombre.setText("Nombre:");

        lbl_apellido_pat.setText("Apellido Paterno:");

        lbl_apellido_mat.setText("Apellido Materno:");

        lbl_direccion.setText("Direccion:");

        lbl_telefono.setText("Telefono:");

        lbl_sexo.setText("Sexo:");

        rad_btn_masculino.setText("Masculino");

        rad_btn_femenino.setText("Femenino");

        lbl_fecha.setText("Fecha de ingreso:");

        txt_fecha.setEnabled(false);

        lbl_id_departamento.setText("ID Departamento:");

        txt_id_departamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_id_departamentoActionPerformed(evt);
            }
        });

        lbl_id_puesto.setText("ID Puesto:");

        txt_id_puesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_id_puestoActionPerformed(evt);
            }
        });

        lbl_coop.setText("Coop:");

        rad_btn_si.setText("Si");
        rad_btn_si.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rad_btn_siMouseClicked(evt);
            }
        });

        rad_btn_no.setText("No");
        rad_btn_no.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rad_btn_noMouseClicked(evt);
            }
        });

        lbl_salario.setText("Salario:");

        btn_guardar.setText("Guardar");
        btn_guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_guardarMouseClicked(evt);
            }
        });

        lbl_descuento.setText("Descuento:");

        txt_descuento.setEnabled(false);

        lbl_balance_acumulado.setText("Balance Acumulado:");

        txt_balance_acumulado.setEnabled(false);

        menu_principal.setText("Principal");
        menu_principal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_principalMouseClicked(evt);
            }
        });
        menu.add(menu_principal);

        menu_Mantenimientos.setText("Mantenimientos");

        mantenimiento_de_usuarios.setText("De Usuarios");
        mantenimiento_de_usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mantenimiento_de_usuariosMouseClicked(evt);
            }
        });
        menu_Mantenimientos.add(mantenimiento_de_usuarios);

        mantenimiento_de_departamentos.setText("De Departamentos");
        mantenimiento_de_departamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mantenimiento_de_departamentosMouseClicked(evt);
            }
        });
        menu_Mantenimientos.add(mantenimiento_de_departamentos);

        mantenimiento_de_puestos.setText("De Puestos");
        mantenimiento_de_puestos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mantenimiento_de_puestosMouseClicked(evt);
            }
        });
        menu_Mantenimientos.add(mantenimiento_de_puestos);

        mantenimiento_de_empleados.setText("De Empleados");
        mantenimiento_de_empleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mantenimiento_de_empleadosMouseClicked(evt);
            }
        });
        menu_Mantenimientos.add(mantenimiento_de_empleados);

        menu.add(menu_Mantenimientos);

        menu_procesos.setText("Procesos");

        proceso_generar_nomina.setText("Generar Nomina");
        proceso_generar_nomina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                proceso_generar_nominaMouseClicked(evt);
            }
        });
        menu_procesos.add(proceso_generar_nomina);

        proceso_reversar_nomina.setText("Reversar Nomina");
        proceso_reversar_nomina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                proceso_reversar_nominaMouseClicked(evt);
            }
        });
        menu_procesos.add(proceso_reversar_nomina);

        menu.add(menu_procesos);

        menu_consultas.setText("Consultas");

        consulta_de_departamento.setText("De Departamento");
        consulta_de_departamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                consulta_de_departamentoMouseClicked(evt);
            }
        });
        menu_consultas.add(consulta_de_departamento);

        consulta_de_puestos.setText("De Puestos");
        consulta_de_puestos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                consulta_de_puestosMouseClicked(evt);
            }
        });
        menu_consultas.add(consulta_de_puestos);

        consulta_empleado.setText("De Empleado");
        consulta_empleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                consulta_empleadoMouseClicked(evt);
            }
        });
        menu_consultas.add(consulta_empleado);

        consulta_nomina.setText("De Nomina");
        consulta_nomina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                consulta_nominaMouseClicked(evt);
            }
        });
        menu_consultas.add(consulta_nomina);

        menu.add(menu_consultas);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(btn_guardar)))
                .addGap(36, 103, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_salario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_salario, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_descuento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_descuento, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_coop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rad_btn_si)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rad_btn_no))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_id_puesto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_id_puesto, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_telefono)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lbl_direccion)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_direccion))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_apellido_pat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_apellido_pat, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lbl_apellido_mat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_apellido_mat, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_id)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_id))
                                    .addComponent(lbl_nombre))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_sexo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rad_btn_masculino)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rad_btn_femenino))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_id_departamento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_id_departamento, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lbl_balance_acumulado)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_balance_acumulado))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(lbl_fecha)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_id)
                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_nombre)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_apellido_pat)
                    .addComponent(txt_apellido_pat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_apellido_mat)
                    .addComponent(txt_apellido_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_direccion)
                    .addComponent(txt_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_telefono)
                    .addComponent(txt_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_sexo)
                    .addComponent(rad_btn_masculino)
                    .addComponent(rad_btn_femenino))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_id_departamento)
                    .addComponent(txt_id_departamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_fecha)
                    .addComponent(txt_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_id_puesto)
                    .addComponent(txt_id_puesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_coop)
                    .addComponent(rad_btn_si)
                    .addComponent(rad_btn_no))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_descuento)
                    .addComponent(txt_descuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_balance_acumulado)
                    .addComponent(txt_balance_acumulado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_salario)
                    .addComponent(txt_salario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(btn_guardar)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idActionPerformed
        
        String id_input = txt_id.getText();
        
        try {
            
            File archivo = new File("archivos/empleados.txt");

            if(!archivo.exists()){//No existe Archivo
            
                archivo.createNewFile();
                
            }//Fin archivo no existe

            BufferedReader br = new BufferedReader(new FileReader(archivo));
            Scanner sc = new Scanner(archivo);
                       
            while(sc.hasNextLine() && !id_existe){
            
                String linea = sc.nextLine();
                Scanner sl = new Scanner(linea);
                sl.useDelimiter("\\s*;\\s*");
                
                String id = sl.next();
                String nombre = sl.next();
                String apellido_paterno = sl.next();
                String apellido_materno = sl.next();
                String direccion = sl.next();
                int telefono = Integer.valueOf(sl.next());
                boolean sexo = Boolean.parseBoolean(sl.next());// True si es hombre. False si es mujer
                int id_dept = Integer.valueOf(sl.next());
                String fecha = sl.next();
                int id_puesto = Integer.valueOf(sl.next());
                boolean coop = Boolean.parseBoolean(sl.next());// True si pertenece a coop. False si no.
                double salario = Double.valueOf(sl.next());                
                
                if(id_input.equals(id)){//Comprobamos que el ID exista y si lo hace entonces queremos llenar todos los campos de la interfaz

                    id_existe = true;
                    linea_antigua = id + "; " + nombre + "; " + apellido_paterno + "; " + apellido_materno + "; " + direccion + "; " + telefono + "; " + sexo + "; " + id_dept + "; " + fecha + "; " + id_puesto + "; " + coop + "; " + salario;               
                    
                    txt_nombre.setText(nombre);
                    txt_apellido_pat.setText(apellido_paterno);
                    txt_apellido_mat.setText(apellido_materno);
                    txt_direccion.setText(direccion);
                    txt_telefono.setText(String.valueOf(telefono));
                    
                    if(sexo){//True Hombre
                    
                        rad_btn_masculino.setSelected(true);
                        
                    }else{// Flase mujer
                    
                        rad_btn_femenino.setSelected(true);
                        
                    }
                    
                    txt_id_departamento.setText(String.valueOf(id_dept));
                    txt_fecha.setText(fecha);
                    txt_id_puesto.setText(String.valueOf(id_puesto));
                    
                    if(coop){//True si pertenece a coop
                    
                        rad_btn_si.setSelected(true);
                        
                        try {
                            
                            File archivo_coop = new File("archivos/coop.txt");

                            if(!archivo_coop.exists()){

                                archivo_coop.createNewFile();

                            }

                            BufferedReader br_coop = new BufferedReader(new FileReader(archivo_coop));
                            Scanner sc_coop = new Scanner(archivo_coop);
                            boolean encontro_coop_id = false;
                            
                            boolean tiene_balc_acumulado = false;

                            while(sc_coop.hasNextLine() && !encontro_coop_id){

                                String linea_coop = sc_coop.nextLine();
                                Scanner sl_coop = new Scanner(linea_coop);
                                sl_coop.useDelimiter("\\s*;\\s*");

                                String id_coop_empleado = sl_coop.next();
                                Double descuento = Double.valueOf(sl_coop.next());
                                
                                Double balc_acum = Double.valueOf(sl_coop.next());                                

                                if(id_coop_empleado.equals(id)){
                                    
                                    linea_antigua_coop = id_coop_empleado + "; " + descuento + "; " + balc_acum;
                                    
                                    if(balc_acum > 0.0){
                                    
                                        tiene_balc_acumulado = true;
                                        
                                    }
                                                                        
                                    txt_descuento.setEnabled(true);
                                    txt_descuento.setText(descuento.toString());
                                    txt_balance_acumulado.setText(balc_acum.toString());
                                    encontro_coop_id = true;

                                }

                            }
                            
                            if(tiene_balc_acumulado){
                            
                                rad_btn_no.setEnabled(false);
                                
                            }
                            
                            sl.close();
                            
                        } catch (Exception e) {
                            
                            System.out.println("Error con archivo coop.");
                            e.printStackTrace();
                            
                        }                                                
                        
                    }else{// False si no pertenece a coop
                    
                        rad_btn_no.setSelected(true);
                        
                    }
                    
                    txt_salario.setText(String.valueOf(salario));
                    
                    
                    JOptionPane.showMessageDialog(null, "Puede Modificar");
                
                }else{
                
                    id_existe = false;
                    
                }                               
                
            }
            
            if(!id_existe){
            
                JOptionPane.showMessageDialog(null, "Creando Nuevo");
                
            }
            
        } catch (Exception e) {
            
            e.printStackTrace();
            
        }
        
    }//GEN-LAST:event_txt_idActionPerformed

    private void txt_id_departamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_id_departamentoActionPerformed
        
        String id_input = txt_id_departamento.getText();
        
        try {
            
            File archivo = new File("archivos/departamentos.txt");

            if(!archivo.exists()){//No existe Archivo
            
                archivo.createNewFile();
                
            }//Fin archivo no existe

            BufferedReader br = new BufferedReader(new FileReader(archivo));
            Scanner sc = new Scanner(archivo);
                       
            while(sc.hasNextLine() && !id_departamento_existe){
            
                String linea = sc.nextLine();
                Scanner sl = new Scanner(linea);
                sl.useDelimiter("\\s*;\\s*");
                
                String id = sl.next();
                
                if(id_input.equals(id)){//Comprobamos que el ID exista y si lo hace entonces queremos llenar todos los campos de la interfaz

                    id_departamento_existe = true;
                    
                }else{
                
                    id_departamento_existe = false;
                    
                }                               
                
            }
            
        } catch (Exception e) {
            
            e.printStackTrace();
            
        }
        
        
    }//GEN-LAST:event_txt_id_departamentoActionPerformed

    private void txt_id_puestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_id_puestoActionPerformed
        
        String id_input = txt_id_puesto.getText();
        
        try {
            
            File archivo = new File("archivos/puestos.txt");

            if(!archivo.exists()){//No existe Archivo
            
                archivo.createNewFile();
                
            }//Fin archivo no existe

            BufferedReader br = new BufferedReader(new FileReader(archivo));
            Scanner sc = new Scanner(archivo);
                       
            while(sc.hasNextLine() && !id_puesto_existe){
            
                String linea = sc.nextLine();
                Scanner sl = new Scanner(linea);
                sl.useDelimiter("\\s*;\\s*");
                
                String id = sl.next();
                
                if(id_input.equals(id)){//Comprobamos que el ID exista y si lo hace entonces queremos llenar todos los campos de la interfaz

                    id_puesto_existe = true;

                
                }else{
                
                    id_puesto_existe = false;
                    
                }                               
                
            }           
            
        } catch (Exception e) {
            
            e.printStackTrace();
            
        }
        
    }//GEN-LAST:event_txt_id_puestoActionPerformed

    private void btn_guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_guardarMouseClicked
        
        boolean correr = false; // Esta varialbe se usa despues de comprobar que todos los campos estan llenos.
        int total = 0; // Esta variable sumara 6 si todos los campos estan llenos.
        
        String id = txt_id.getText();
        String nombre = txt_nombre.getText();
        String apellido_pat = txt_apellido_pat.getText();
        String apellido_mat = txt_apellido_mat.getText();
        String direccion = txt_direccion.getText();
        
        int telefono;
        
        try {
            
            telefono = Integer.valueOf(txt_telefono.getText());
            
        } catch (Exception e) {
            
            telefono = -1;
            
        }
        
        
        // Evaluar Sexo
        int evaluar_sexo;
        
        if(rad_btn_masculino.isSelected()){// Si es masculino, la variable evaluar_sexo sera 0
        
            evaluar_sexo = 0;
            
        }else if(rad_btn_femenino.isSelected()){// Si es mujer, sera 1
        
            evaluar_sexo = 1;
            
        }else{// SI ninguno esta seleccionado sera -1
        
            evaluar_sexo = -1;
            
        }
        
        boolean sexo;
        
        if(evaluar_sexo != 1){
        
            sexo = (evaluar_sexo == 1);// Si esta operacion es cierta entonces el sexo es masculino. De lo contrario es femenino
            
        }
        
        // Fin de evaluar Sexo
        
        int id_dept;
        
        try {
            
            id_dept = Integer.valueOf(txt_id_departamento.getText());
        
        } catch (Exception e) {
            
            id_dept = -1;
            
        }
                
        String fecha = txt_fecha.getText();
        
        int id_puesto;
        
        try {
            
            id_puesto = Integer.valueOf(txt_id_puesto.getText());
            
        } catch (Exception e) {
            
            id_puesto = -1;
            
        }
        
        int evaluar_coop;
        
        if(rad_btn_si.isSelected()){// Pertenece a coop, variable evaluar_coop sera 0
        
            evaluar_coop = 0;
            
        }else if(rad_btn_no.isSelected()){// No pertenece a coop, sera 1
        
            evaluar_coop = 1;
            
        }else{ // No fue seleccionado
        
            evaluar_coop = -1;
            
        }
        
        boolean coop;
        
        if(evaluar_coop != -1){
        
            coop = (evaluar_coop == 0); // Sera verdadero si pertenece a coop.
            
        }
        
        double descuento;
        
        try {
                    
            descuento = Double.valueOf(txt_descuento.getText());
            
            if(descuento > 5.0 || descuento < 0){
            
                descuento = -1;
                
            }
                    
        } catch (Exception e) {
                    
            descuento = -1;
                    
        }
        
        double salario;
        
        try {
            
            salario = Double.valueOf(txt_salario.getText());
            
        } catch (Exception e) {
            
            salario = -1;
            
        }
        
        // Evaluar que los campos esten llenos.
        
        if(!id.isBlank()){// Si el ID no esta vacio, pasamos a evaluar el siguiente campo.
        
            total += 1;
            lbl_id.setForeground(Color.black);
            
        }else{// Si el ID esta vacio, lo marcamos con rojo.
        
            lbl_id.setForeground(Color.red);
            
        }
        
        if(!nombre.isBlank()){// Si el nombre no esta vacio, pasamos a evaluar el siguiente campo.
            
            total += 1;
            lbl_nombre.setForeground(Color.black);
            
        }else{ // Si el login esta vacio, lo marcamos con rojo.
            
            lbl_nombre.setForeground(Color.red);
                
        }
        
        if(!apellido_pat.isBlank()){// Si el apellido paternal no esta vacio, pasamos a evaluar el siguiente campo.

            total += 1;
            lbl_apellido_pat.setForeground(Color.black);
        
        } else {// Si esta vacio, la marcamos con rojo.
                
            lbl_apellido_pat.setForeground(Color.red);
                    
        }
        
        if(!apellido_mat.isBlank()){// Si el apellido maternal no esta vacio, pasamos a evaluar el siguiente campo.

            total += 1;
            lbl_apellido_mat.setForeground(Color.black);
        
        } else {// Si esta vacio, la marcamos con rojo.
                
            lbl_apellido_mat.setForeground(Color.red);
                    
        }
        
        if(!direccion.isBlank()){// Si la direccion no esta vacia, pasamos a evaluar el siguiente campo.

            total += 1;
            lbl_direccion.setForeground(Color.black);
        
        } else {// Si esta vacia, la marcamos con rojo.
                
            lbl_direccion.setForeground(Color.red);
                    
        }
        
        if(!txt_telefono.getText().isBlank() && telefono != -1){//Si el telefono no esta vacio, pasamos a evaluar el siguiente
        
            total += 1;
            lbl_telefono.setForeground(Color.black);
            
        }else{// Si esta vacio entonces lo marcamos rojo.
        
            lbl_telefono.setForeground(Color.red);
            
        }
        
        
        if(evaluar_sexo != -1){// Si el sexo fue seleccionado, pasamos a evaluar el siguiente campo.
                    
            total += 1;
            lbl_sexo.setForeground(Color.black);
                        
        } else {// Si el sexo no fue seleccionado, marcamos el campo con rojo.
                    
            lbl_sexo.setForeground(Color.red);
        
        }
        
        if(!txt_id_departamento.getText().isBlank() && id_dept != -1 && id_departamento_existe){//Si el id departamento no esta vacio, pasamos a evaluar el siguiente
        
            total += 1;
            lbl_id_departamento.setForeground(Color.black);
            
        }else{// Si esta vacio entonces lo marcamos rojo.
        
            lbl_id_departamento.setForeground(Color.red);
            
        }
        
        if(!txt_id_puesto.getText().isBlank() && id_puesto != -1 && id_puesto_existe){//Si el id puesto no esta vacio, pasamos a evaluar el siguiente
        
            total += 1;
            lbl_id_puesto.setForeground(Color.black);
            
        }else{// Si esta vacio entonces lo marcamos rojo.
        
            lbl_id_puesto.setForeground(Color.red);
            
        }
        
        if(evaluar_coop != -1){// Si coop fue seleccionado, pasamos a evaluar el siguiente campo.
            
            if(evaluar_coop == 0){// Si coop es verdadero evaluamos que descuento este lleno
            
                if(!txt_descuento.getText().isBlank() && descuento != -1){
                
                    total += 1;
                    lbl_descuento.setForeground(Color.black);
                    
                }else{
                    
                    lbl_descuento.setForeground(Color.red);
            
                }
                
            }else{
            
                total += 1;
                lbl_coop.setForeground(Color.black);
            
            }
                        
        } else {// Si el sexo no fue seleccionado, marcamos el campo con rojo.
                    
            lbl_coop.setForeground(Color.red);
        
        }
        
        if(!txt_salario.getText().isBlank() && salario != -1){
        
            total += 1;
            lbl_salario.setForeground(Color.black);
            
        }else{
        
            lbl_salario.setForeground(Color.red);
            
        }
        
        if(total == 11){
        
            System.out.println("Todos los campos de Mantenimiento Empleados estan llenos.");
            correr = true;
            
        }else{
        
            System.out.println("Alguno de los campos de Mantenimiento Empleados esta vacio.");
        
        }
        
        if(correr){
        
            try {
                
                File archivo = new File("archivos/empleados.txt");

                if(!archivo.exists()){//No existe Archivo
            
                    archivo.createNewFile();
                    
                }//Fin archivo no existe

                BufferedReader br = new BufferedReader(new FileReader(archivo));
                Scanner sc = new Scanner(archivo);
                String linea_nueva = id + "; " + nombre + "; " + apellido_pat + "; " + apellido_mat + "; " + direccion + "; " + telefono + "; " + (evaluar_sexo == 0) + "; " + id_dept + "; " + fecha + "; " + id_puesto + "; " + (evaluar_coop == 0) + "; " + salario; // Definimos la linea modificada
                String linea_agregar_coop = id + "; " + descuento + "; 0.0";
                
                if(id_existe && id_departamento_existe && id_puesto_existe){// Modificamos
                
                    File archivo_nuevo = new File("archivos/temp.txt");// Creamos el archivo nuevo con nombre temporal
                    BufferedWriter bw = new BufferedWriter(new FileWriter(archivo_nuevo, true));// Preparamos el objeto para escribir
                    String linea;
                    
                    try{
                        
                        if(!archivo_nuevo.exists()){
                        
                            archivo_nuevo.createNewFile();
                            
                        }
                        
                            if(evaluar_coop == 0){// Modificamos el archivo de Coop

                                File archivo_original_coop = new File("archivos/coop.txt");

                                File archivo_nuevo_coop = new File("archivos/temp2.txt");
                                BufferedWriter bw_coop = new BufferedWriter(new FileWriter(archivo_nuevo_coop, true));
                                String linea_coop;                                                                            

                                try{// Coop

                                    BufferedReader br_coop = new BufferedReader(new FileReader(archivo_original_coop));
                                    Scanner sc_coop = new Scanner(archivo_original_coop);
                                    
                                    boolean crear_nuevo_balc = true;

                                    while(sc_coop.hasNextLine()){

                                        linea_coop = sc_coop.nextLine();
                                        Scanner sl_coop = new Scanner(linea_coop);
                                        sl_coop.useDelimiter("\\s*;\\s*");

                                        String id_coop_empleado = sl_coop.next();
                                        sl_coop.next();
                                        Double balc_acum = Double.valueOf(sl_coop.next());
                                        
                                        

                                        String linea_nueva_coop = id + "; " + descuento + "; " + balc_acum;

                                            System.out.println(linea_antigua_coop);
                                            System.out.println(linea_coop);

                                        if(id_coop_empleado.equals(id)){

                                            bw_coop.write(linea_nueva_coop + "\r\n");
                                            crear_nuevo_balc = false;

                                        }else{

                                            bw_coop.write(linea_coop + "\r\n");

                                        }
                                                                                
                                    }
                                    
                                    if(crear_nuevo_balc){
                                    
                                        bw_coop.write(linea_agregar_coop + "\r\n");
                                  
                                    }
 
                                    bw_coop.close();

                                    if(archivo_original_coop.exists()){

                                        archivo_original_coop.delete();
                                        System.out.println("Borramos archivo original de coop");

                                    }

                                    archivo_nuevo_coop.renameTo(archivo_original_coop);                                                               

                                }catch(Exception e){

                                    e.printStackTrace();

                                }


                            }// Terminamos de modificar el archivo de coop
                        
                        while( (linea = br.readLine()) != null){// Recorremos el archivo original y la variable linea guarda los datos de la linea actual.
                            
                            if(linea.equals(linea_antigua)){// Evaluamos la linea actual. Si estamos en la linea que queremos modificar, cambiamos lo que se escribe en el nuevo archivo. Escribimos la linea modificada.

                                bw.write(linea_nueva + "\r\n");// Escribimos linea modificada

                            }else{// No es la linea modificada. Se pasa igual.

                                bw.write(linea + "\r\n");// No es la linea modificada. Se pasa igual.

                            }
                        
                        }
                    
                        bw.close();// Cerramos el archivo.
                        
                        String nombre_arch_antiguo = archivo.getName();
                        
                        if(archivo.exists()){
                        
                            archivo.delete();
                            System.out.println("Archivo: " + nombre_arch_antiguo);
                            
                        }
                        
                        archivo_nuevo.renameTo(archivo);
                        
                        JOptionPane.showMessageDialog(null, "Modificado con exito!");
                        
                    
                    }catch(Exception e){
                    
                        System.out.println("Error Creando archivo para modificar");
                        
                    }
                    
                    
                }else if(id_departamento_existe && id_puesto_existe){// Agregamos
                
                    try{
                    
                        FileWriter F1 = new FileWriter(archivo, true);
                        PrintWriter esc = new PrintWriter(F1);   
                        esc.println(linea_nueva);
                        esc.close();
                        
                        if(evaluar_coop == 0){
                            
                            File archivo_coop = new File("archivos/coop.txt");
                            
                            if(!archivo_coop.exists()){
                            
                                archivo_coop.createNewFile();
                                
                            }
                        
                            BufferedWriter bw_coop = new BufferedWriter(new FileWriter(archivo_coop, true));
                            bw_coop.write(linea_agregar_coop + "\r\n");
                            bw_coop.close();
                                                        
                        }
                        
                        JOptionPane.showMessageDialog(null, "Guardado con exito!");
                        
                    }catch(Exception e){
                    
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(null, "Error Creando.");
                    }
                    
                }
                
                sc.close();
              
                txt_id.setText("");
                txt_nombre.setText("");
                txt_apellido_pat.setText("");
                txt_apellido_mat.setText("");
                txt_direccion.setText("");
                txt_telefono.setText("");
                rad_btn_masculino.setSelected(false);
                rad_btn_masculino.setSelected(false);
                txt_id_departamento.setText("");
                txt_id_puesto.setText("");
                               
            } catch (Exception e) {
                
                e.printStackTrace();
                
            }
            
        }
        
        // Fin de evaluacion de campos llenos.
        
    }//GEN-LAST:event_btn_guardarMouseClicked

    private void rad_btn_siMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rad_btn_siMouseClicked
        
        txt_descuento.setEnabled(true);
        
    }//GEN-LAST:event_rad_btn_siMouseClicked

    private void rad_btn_noMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rad_btn_noMouseClicked
        
        txt_descuento.setEnabled(false);
        txt_descuento.setText("");
        txt_balance_acumulado.setText("");
        
    }//GEN-LAST:event_rad_btn_noMouseClicked

    private void menu_principalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_principalMouseClicked

        this.setVisible(false);
        new Principal().setVisible(true);
    }//GEN-LAST:event_menu_principalMouseClicked

    private void mantenimiento_de_usuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mantenimiento_de_usuariosMouseClicked

        this.setVisible(false);
        new Mantenimiento_usuarios().setVisible(true);
    }//GEN-LAST:event_mantenimiento_de_usuariosMouseClicked

    private void mantenimiento_de_departamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mantenimiento_de_departamentosMouseClicked

        this.setVisible(false);
        new Mantenimiento_departamentos().setVisible(true);
    }//GEN-LAST:event_mantenimiento_de_departamentosMouseClicked

    private void mantenimiento_de_puestosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mantenimiento_de_puestosMouseClicked

        this.setVisible(false);
        new Mantenimiento_puestos().setVisible(true);
    }//GEN-LAST:event_mantenimiento_de_puestosMouseClicked

    private void mantenimiento_de_empleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mantenimiento_de_empleadosMouseClicked

        this.setVisible(false);
        new Mantenimiento_empleados().setVisible(true);
    }//GEN-LAST:event_mantenimiento_de_empleadosMouseClicked

    private void proceso_generar_nominaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proceso_generar_nominaMouseClicked

        this.setVisible(false);
        new Procesos_generar_nomina().setVisible(true);
    }//GEN-LAST:event_proceso_generar_nominaMouseClicked

    private void proceso_reversar_nominaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proceso_reversar_nominaMouseClicked

        this.setVisible(false);
        new Procesos_reversar_nomina().setVisible(true);
    }//GEN-LAST:event_proceso_reversar_nominaMouseClicked

    private void consulta_de_departamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consulta_de_departamentoMouseClicked

        this.setVisible(false);
        new Consulta_departamentos().setVisible(true);
    }//GEN-LAST:event_consulta_de_departamentoMouseClicked

    private void consulta_de_puestosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consulta_de_puestosMouseClicked

        this.setVisible(false);
        new Consulta_puestos().setVisible(true);
    }//GEN-LAST:event_consulta_de_puestosMouseClicked

    private void consulta_empleadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consulta_empleadoMouseClicked

        this.setVisible(false);
        new Consulta_empleados().setVisible(true);

    }//GEN-LAST:event_consulta_empleadoMouseClicked

    private void consulta_nominaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consulta_nominaMouseClicked

        this.setVisible(false);
        new Consulta_nomina().setVisible(true);

    }//GEN-LAST:event_consulta_nominaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento_empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento_empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento_empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento_empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mantenimiento_empleados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btn_grupo_coop;
    private javax.swing.ButtonGroup btn_grupo_sexo;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JMenu consulta_de_departamento;
    private javax.swing.JMenu consulta_de_puestos;
    private javax.swing.JMenu consulta_empleado;
    private javax.swing.JMenu consulta_nomina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbl_apellido_mat;
    private javax.swing.JLabel lbl_apellido_pat;
    private javax.swing.JLabel lbl_balance_acumulado;
    private javax.swing.JLabel lbl_coop;
    private javax.swing.JLabel lbl_descuento;
    private javax.swing.JLabel lbl_direccion;
    private javax.swing.JLabel lbl_fecha;
    private javax.swing.JLabel lbl_id;
    private javax.swing.JLabel lbl_id_departamento;
    private javax.swing.JLabel lbl_id_puesto;
    private javax.swing.JLabel lbl_nombre;
    private javax.swing.JLabel lbl_salario;
    private javax.swing.JLabel lbl_sexo;
    private javax.swing.JLabel lbl_telefono;
    private javax.swing.JMenu mantenimiento_de_departamentos;
    private javax.swing.JMenu mantenimiento_de_empleados;
    private javax.swing.JMenu mantenimiento_de_puestos;
    private javax.swing.JMenu mantenimiento_de_usuarios;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenu menu_Mantenimientos;
    private javax.swing.JMenu menu_consultas;
    private javax.swing.JMenu menu_principal;
    private javax.swing.JMenu menu_procesos;
    private javax.swing.JMenu proceso_generar_nomina;
    private javax.swing.JMenu proceso_reversar_nomina;
    private javax.swing.JRadioButton rad_btn_femenino;
    private javax.swing.JRadioButton rad_btn_masculino;
    private javax.swing.JRadioButton rad_btn_no;
    private javax.swing.JRadioButton rad_btn_si;
    private javax.swing.JTextField txt_apellido_mat;
    private javax.swing.JTextField txt_apellido_pat;
    private javax.swing.JTextField txt_balance_acumulado;
    private javax.swing.JTextField txt_descuento;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_fecha;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_id_departamento;
    private javax.swing.JTextField txt_id_puesto;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_salario;
    private javax.swing.JTextField txt_telefono;
    // End of variables declaration//GEN-END:variables
}
